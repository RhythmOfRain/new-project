56. Merge Intervals My Submissions QuestionEditorial Solution
Total Accepted: 69432 Total Submissions: 269485 Difficulty: Hard
Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].

my solution:
×¢Òâcmpº¯ÊýÊÇstatic
/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    static bool cmp(Interval t1, Interval t2){
        return t1.start < t2.start;
    }
public:
    vector<Interval> merge(vector<Interval>& intervals) {
        if(intervals.size() < 2)
            return intervals;
        int len = intervals.size();
        vector<Interval> res;
        sort(intervals.begin(), intervals.end(), cmp);
        res.push_back(intervals[0]);
        for(int i = 1; i < len; ++i){
            if(intervals[i].start > res[res.size() - 1].end)
                res.push_back(intervals[i]);
            else
                res[res.size() - 1].end = max(res[res.size() - 1].end, intervals[i].end);
        }
        return res;
    }
};