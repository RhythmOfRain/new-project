216. Combination Sum III  QuestionEditorial Solution  My Submissions
Total Accepted: 38209
Total Submissions: 100963
Difficulty: Medium
Find all possible combinations of k numbers that add up to a number n, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.


Example 1:

Input: k = 3, n = 7

Output:

[[1,2,4]]

Example 2:

Input: k = 3, n = 9

Output:

[[1,2,6], [1,3,5], [2,3,4]]

my solution:
class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        if(n == 0) return res;
        dfs(0, 1, 0, k, n);
        return res;
    }
private:
    vector<vector<int>> res;
    vector<int> cur;
    void dfs(int sum, int num, int count, int k, int n){
        if(sum == n && count == k){
            res.push_back(cur);
            return;
        }else if(count == k && sum != n){
            return;
        }else{
            for(int i = num; i <= 9; ++i){
                cur.push_back(i);
                dfs(sum + i, i + 1, count + 1, k, n);
                cur.pop_back();
            }
        }
    }
};