187. Repeated DNA Sequences  QuestionEditorial Solution  My Submissions
Total Accepted: 47712
Total Submissions: 180134
Difficulty: Medium
All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

For example,

Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

Return:
["AAAAACCCCC", "CCCCCAAAAA"].

my solution:
class Solution {
public:
    vector<string> findRepeatedDnaSequences(string s) {
        vector<string> res;
        if(s.size() <= 10)
            return res;
        unordered_map<string, int> count;
        for(int i = 0; i <= s.size() - 10; ++i)
            ++count[s.substr(i,10)];
        for(const auto &e : count){
            if(e.second > 1)
                res.push_back(e.first);
        }
        return res;
    }
};

另一种思路：
下面是一个可行的方案：

字符串中只包含4个字符：A, C, G, T。它们的ASCII码的二进制形式是：

A : 0100 0001
C : 0100 0011
G : 0100 0111
T : 0101 0100
这4个字符的末3位是不同的，因此，我们可以 3个bits 来表示其中的一个字符。
又因为每个子串的长度为10，因此总的位数是：10 x 3 = 30，一个int就足够存放它。
