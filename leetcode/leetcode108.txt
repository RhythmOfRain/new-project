108. Convert Sorted Array to Binary Search Tree  QuestionEditorial Solution  My Submissions
Total Accepted: 82694
Total Submissions: 215882
Difficulty: Medium
Given an array where elements are sorted in ascending order, convert it to a height balanced BST.

my solution:
每次选择数组的中间节点作为跟节点
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return helper(nums, 0, nums.size() - 1);
    }
    TreeNode* helper(vector<int>& nums, int begin, int end){
        if(begin > end)  return NULL;
        else if(begin == end) return new TreeNode(nums[begin]);
        else{
            int mid = begin + (end - begin) / 2;
            TreeNode* root = new TreeNode(nums[mid]);
            root -> left = helper(nums, begin, mid - 1);
            root -> right = helper(nums, mid + 1, end);
            return root;
        }
    }
};