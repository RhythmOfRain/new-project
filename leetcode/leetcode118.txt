118. Pascal's Triangle My Submissions QuestionEditorial Solution
Total Accepted: 79954 Total Submissions: 241320 Difficulty: Easy
Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

my solution:too ugly
class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> result;
        vector<int> vi = {1};
        if(numRows == 0)
            return result;
        if(numRows == 1){
            result.push_back(vi);
            return result;
        }
        int count = 1;
        result.push_back(vi);
        while(count < numRows){
            vi.resize(1);
            int index = count - 1;
            int len = result[index].size() - 1;
            for(int i = 0; i < len; ++i)
                vi.push_back(result[index][i] + result[index][i+1]);
            vi.push_back(1);
            result.push_back(vi);
            ++count;
        }
        return result;
    }
};

vector<vector<int> > generate(int numRows) {
        vector<vector<int>> r(numRows);

        for (int i = 0; i < numRows; i++) {
            r[i].resize(i + 1);
            r[i][0] = r[i][i] = 1;

            for (int j = 1; j < i; j++)
                r[i][j] = r[i - 1][j - 1] + r[i - 1][j];
        }

        return r;
    }