113. Path Sum II  QuestionEditorial Solution  My Submissions
Total Accepted: 88344
Total Submissions: 302937
Difficulty: Medium
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]

my solution:
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<int> cur;
        helper(root, 0, cur, sum);
        return res;
    }
private:
    vector<vector<int>> res;
    void helper(TreeNode *node, int total, vector<int> &cur, int sum){
         if(node == NULL) return;
         cur.push_back(node -> val);
         total += node -> val;
         if(node -> left == NULL && node -> right == NULL && total == sum){
             res.push_back(cur);
             cur.pop_back();
             return;
         }
         if(node -> left)
            helper(node -> left, total, cur, sum);
         if(node -> right)
            helper(node -> right, total, cur, sum);
         cur.pop_back();
    }
};