40. Combination Sum II  QuestionEditorial Solution  My Submissions
Total Accepted: 75654
Total Submissions: 264174
Difficulty: Medium
Given a collection of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.

Each number in C may only be used once in the combination.

Note:
All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.
For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, 
A solution set is: 
[
  [1, 7],
  [1, 2, 5],
  [2, 6],
  [1, 1, 6]
]

my solution:
class Solution {
public:
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        if(candidates.size() == 0) return res;
        sort(candidates.begin(), candidates.end());
        dfs(0, 0, candidates, target);
        return res;
        
    }
private:
    vector<vector<int>> res;
    vector<int> cur;
    void dfs(int index, int sum, vector<int>& candidates, int target){
        if(sum == target){
            res.push_back(cur);
            return;
        }else if(sum > target){
            return;
        }else{
            for(int i = index; i < candidates.size(); ++i){
		// key step
                if(i != index && candidates[i] == candidates[i - 1]) continue;
                cur.push_back(candidates[i]);
                dfs(i + 1, sum + candidates[i], candidates, target);
                cur.pop_back();
            }
        }
    }

};